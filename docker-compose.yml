services:
        reverse-proxy:
                image: traefik:v3.3.2
                container_name: traefik
                restart: always
                ports:
                        - "${HTTP_PORT}:${HTTP_PORT}"       # HTTP
                        - "${HTTPS_PORT}:${HTTPS_PORT}"     # HTTPS
                        - "${TRAEFIK_PORT}:${TRAEFIK_PORT}"   # Traefik dashboard

                volumes:
                        - "/var/run/docker.sock:/var/run/docker.sock:ro"  # Docker socket to listen for container events
                        - "./certs:/certs"                                # Mount the folder with SSL certificates
                        - "./traefik.yml:/config/traefik.yml"
                environment:
                        -  CERT=${CERT_FILE}
                        -  KEY=${KEY_FILE}
                labels:
                        - "traefik.enable=true"                           # Enable Traefik for this container
                        - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
                        - "traefik.http.routers.traefik.entrypoints=websecure"
                        - "traefik.http.routers.traefik.service=api@internal"
                        - "traefik.http.routers.traefik.tls=true"
                        # Middleware to redirect HTTP to HTTPS
                        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
                        # Apply middleware to the web entrypoint (HTTP)
                        - "traefik.http.routers.http-catchall.entrypoints=web"
                        - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
                        - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
                command:
                        - "--configFile=/config/traefik.yml"
                        - "--providers.file.watch=true"

        opal:
                image: obiba/opal:5.1.3
                container_name: opal
                restart: always
                expose:
                        - ${OPAL_PORT}
                links:
                        - postgresdata
                        - rock
                environment:
                        - OPAL_ADMINISTRATOR_PASSWORD=${OPAL_ADMINISTRATOR_PASSWORD}
                        - POSTGRESDATA_DATABASE=${POSTGRESDATA_DATABASE}
                        - POSTGRESDATA_HOST=${POSTGRESDATA_HOST}
                        - POSTGRESDATA_USER=${POSTGRESDATA_USER}
                        - POSTGRESDATA_PASSWORD=${POSTGRESDATA_PASSWORD}
                        - ROCK_HOSTS=${ROCK_HOSTS}

                labels:
                        - "traefik.enable=true"                                    # Enable Traefik for this container
                        - "traefik.http.routers.opal.rule=Host(`${IP_DOMAIN}`)"  # Route traffic for this domain
                        - "traefik.http.routers.opal.entrypoints=websecure"
                        - "traefik.http.routers.opal.tls=true"
                volumes:
                        - ./target/test-opal:/srv

        postgresdata:
                image: postgres:17.2
                container_name: postgres
                restart: always
                environment:
                        - POSTGRES_DB=${POSTGRES_DB}
                        - POSTGRES_USER=${POSTGRES_USER}
                        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
                volumes:
                        - ./db/postgres:/var/lib/postgresql/data

        rock:
                image:  infomics/rock-omics2:latest
                container_name: rock
                restart: always
